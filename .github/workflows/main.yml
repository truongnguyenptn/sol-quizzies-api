name: NestJS-Backend:CI

on:
  push:
    branches: ['master']

jobs:
  build:
    environment: env
    name: 'Build Image'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: 522927643345
          ECR_REPOSITORY: ${{secrets.ECR_REPOSITORY}}
          IMAGE_TAG: demo
        run: |
          docker build -t sol-quizzies-api:demo .
          docker tag sol-quizzies-api:demo   522927643345.dkr.ecr.ap-southeast-1.amazonaws.com/sol-quizzies-api:demo;
          docker push 522927643345.dkr.ecr.ap-southeast-1.amazonaws.com/sol-quizzies-api:demo
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" 

      - name: Deploy to App Runner
        id: deploy-apprunner
        uses: awslabs/amazon-app-runner-deploy@main        
        with:
          service: sol-quizzies-api 
          image: 522927643345.dkr.ecr.ap-southeast-1.amazonaws.com/sol-quizzies-api:demo     
          region: ap-southeast-1
          port: 8080
          wait-for-service-stability: true
      
      - name: App Runner output
        run: echo "App runner output ${{ steps.deploy-apprunner.outputs.service-id }}" 

      - name: Logout to Amazon ECR
        if: always()
        run: docker logout ${{steps.login-ecr.outputs.registry}}